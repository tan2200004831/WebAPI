// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NIIEPay.Data;

#nullable disable

namespace NIIEPay.Migrations
{
    [DbContext(typeof(NiiepayContext))]
    partial class NiiepayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NIIEPay.Data.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccountHolder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("AvailableBalance")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<string>("CitizenId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("AccountId")
                        .HasName("PK__Accounts__349DA5A62A996048");

                    b.HasIndex(new[] { "AccountNumber" }, "UQ__Accounts__BE2ACD6F4691BA02")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("NIIEPay.Data.InterestRate", b =>
                {
                    b.Property<int>("TermMonths")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestRate1")
                        .HasColumnType("decimal(4, 2)")
                        .HasColumnName("InterestRate");

                    b.HasKey("TermMonths")
                        .HasName("PK__Interest__25E3983318AC82D3");

                    b.ToTable("InterestRates");
                });

            modelBuilder.Entity("NIIEPay.Data.Saving", b =>
                {
                    b.Property<int>("SavingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SavingId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<bool>("AutoRenew")
                        .HasColumnType("bit");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<DateOnly>("MaturityDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TermMonths")
                        .HasColumnType("int");

                    b.HasKey("SavingId")
                        .HasName("PK__Savings__E3D384B946BFD6D3");

                    b.HasIndex("AccountId");

                    b.ToTable("Savings");
                });

            modelBuilder.Entity("NIIEPay.Data.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<decimal>("BalanceAfter")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<string>("ExternalBankCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int?>("FromAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ToAccountId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("TransactionTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__55433A6B29C2F321");

                    b.HasIndex("FromAccountId");

                    b.HasIndex(new[] { "TransactionCode" }, "UQ__Transact__D85E7026860431D2")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("NIIEPay.Data.Saving", b =>
                {
                    b.HasOne("NIIEPay.Data.Account", "Account")
                        .WithMany("Savings")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Savings__Account__5165187F");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("NIIEPay.Data.Transaction", b =>
                {
                    b.HasOne("NIIEPay.Data.Account", "FromAccount")
                        .WithMany("Transactions")
                        .HasForeignKey("FromAccountId")
                        .HasConstraintName("FK__Transacti__FromA__4D94879B");

                    b.Navigation("FromAccount");
                });

            modelBuilder.Entity("NIIEPay.Data.Account", b =>
                {
                    b.Navigation("Savings");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
